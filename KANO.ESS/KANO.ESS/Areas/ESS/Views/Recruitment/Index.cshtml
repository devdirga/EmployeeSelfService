@{
    Layout = "_Layout";
}
@using KANO.Core.Service
@using KANO.ESS
@using KANO.Core.Model
@using Newtonsoft.Json

<script>
    @*Defining Model Prototype*@
    model.proto = {
        Recruitment: @Html.Raw(Json.Serialize(new Recruitment())),
        DateRange: @Html.Raw(Json.Serialize(new DateRange())),
        RecruitmentTypes: @Html.Raw(Tools.EnumToJson2(typeof(RecruitmentType))),
    };

    model.proto.Recruitment.HTMLFile = "";
</script>
<script src="~/assets/areas/ess/js/recruitment.js?@(Startup.Tick??DateTime.Now.Ticks)"></script>

<div class="row">
    <main class="col-lg-12" role="main">
        <div class="row">
            <div class="col-lg-12 mb-4">
                <div class="card box">
                    <div class="card-header clearfix">
                        <div class="float-left filter-attendance mb-md-xs-2 no-display">                            
                            <button type="button" class="btn btn-md btn-info float-left w-md-xs-100" data-bind="click:model.action.openRecruitmentRequest, disable:model.is.buttonLoading()">
                                <!-- ko if :model.is.buttonLoading() -->
                                <div class="spinner-border spinner-border-sm text-light" role="status">
                                    <span class="sr-only">Loading...</span>
                                </div>
                                <!-- /ko -->
                                <!-- ko ifnot:model.is.buttonLoading() -->
                                Add
                                <!-- /ko -->
                            </button>
                        </div>
                        <div class="float-right filter-attendance">
                            @* <select data-bind="kendoDropDownList: {
                                                        value: model.data.travelStatus,
                                                        data: model.list.travelStatus,
                                                        dataTextField: 'text',
                                                        dataValueField: 'value',
                                                        optionLabel: 'Select Status',
                                                        }" class="w-md-xs-100 mb-md-xs-2"></select> *@
                            <input class="w-md-xs-100 mb-md-xs-2" data-bind="kendoDatePicker: { value: model.data.StartDate, max : model.data.todaymin1, format: 'dd MMM yyyy' } " />
                            <input class="w-md-xs-100 mb-md-xs-2" data-bind="kendoDatePicker: { value: model.data.EndDate, max : model.data.todaymin1, format: 'dd MMM yyyy' } " />
                            @* <div class="btn-group w-md-xs-100 mb-md-xs-2" role="group" aria-label="Basic example">
                                <button type="button" class="w-md-xs-100 btn btn-outline-secondary px-3" onclick="model.action.filterTravelMonthly()">Monthly</button>
                                <button type="button" class="w-md-xs-100 btn btn-outline-secondary px-3" onclick="model.action.filterTravelYearly()">Yearly</button>
                            </div> *@
                            <a href="#" class="w-md-xs-100 btn btn-primary" onclick="model.action.refreshRecruitmentRequest(); return false;">Filter</a>
                        </div>
                    </div>
                    <div class="card-body">
                        <div id="gridRequestRecruitment"></div>
                    </div>
                </div>
            </div>
        </div>
    </main>
</div>
@await Html.PartialAsync("ModalRequestRecruitment.cshtml")
@await Html.PartialAsync("ModalRecruitmentReadonly.cshtml")
<script>
    $(function () {
        @*Render UI Components*@
        model.init.recruitmentRequest();
    })
</script>
