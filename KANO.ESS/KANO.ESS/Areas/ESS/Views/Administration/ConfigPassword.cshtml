@using KANO.Core.Model
@using KANO.Core.Service
@using KANO.ESS
@using Newtonsoft.Json;
@{
    Layout = "_Layout";
}

<script>
    const URL_GET_CONFIG_PASSWORD = "@Url.Action("GetConfigPassword", "Administrator")";
    model.proto = {
        ConfigPassword: ko.observable(@Html.Raw(JsonConvert.SerializeObject(new KANO.Core.Model.Auth.ConfigPassword(), Formatting.Indented))),
    }
</script>

<script src="~/assets/areas/ess/js/administrator.js?@(Startup.Tick??DateTime.Now.Ticks)"></script>
<link rel="stylesheet" href="~/assets/areas/ess/css/dashboard.css">


<div class="row">
    <div class="col-md-8 grid-margin">
        <div class="card">
            <div class="card-body p-max-1200-4">
                <h4 class="card-title">
                    <i class="mdi mdi-clock-fast"></i>Configuration Password
                </h4>
                <div class="table-responsive" id="gridAttendance"></div>
            </div>
            <div class="modal-body" data-bind="with: model.data.ConfigPassword">
                <form id="member-form">
                    <div class="form-group">
                        <label for="menu-Title" class="required">Minimum Length</label>
                        <input data-bind="value: MinimumLength" class="form-control" type="number" id="MinimumLength" name="MinimumLength" required validationMessage="Input Title" />
                    </div>
                    <div class="form-group">
                        <label for="menu-Title" class="required">Must Change Days</label>
                        <input data-bind="value: MustChangeDays" class="form-control" type="number" id="MustChangeDays" name="MustChangeDays" required validationMessage="Input Title" />
                    </div>
                    <div class="form-row">
                        <div class="col">
                            <div class="form-check form-check-flat form-check-success">
                                <label class="form-check-label">
                                    <input type="checkbox" class="form-check-input" id="ContainUppercase" data-bind="checked: ContainUppercase"> Contain Uppercase <i class="input-helper"></i>
                                </label>
                            </div>
                        </div>
                        <div class="col">
                            <div class="form-check form-check-flat form-check-info">
                                <label class="form-check-label">
                                    <input type="checkbox" class="form-check-input" id="ContainLowercase" data-bind="checked: ContainLowercase"> Contain Lowercase <i class="input-helper"></i>
                                </label>
                            </div>
                        </div>
                        <div class="col">
                            <div class="form-check form-check-flat form-check-primary">
                                <label class="form-check-label">
                                    <input type="checkbox" class="form-check-input" id="ContainNumeric" data-bind="checked: ContainNumeric"> Contain Numeric <i class="input-helper"></i>
                                </label>
                            </div>
                        </div>
                        <div class="col">
                            <div class="form-check form-check-flat form-check-primary">
                                <label class="form-check-label">
                                    <input type="checkbox" class="form-check-input" id="ContainSpecialCharacter" data-bind="checked: ContainSpecialCharacter"> Contain Special Character <i class="input-helper"></i>
                                </label>
                            </div>
                        </div>
                    </div>

                </form>


            </div>

            <div data-bind="visible: true" class="modal-footer">
                @*<button type="button" class="btn btn-light" data-dismiss="modal">Cancel</button>*@
                <button type="button" class="btn btn-info" data-bind="click: model.action.updateConfig">Update Config</button>
            </div>

        </div>

    </div>
</div>

<script>
    $(function () {
        @*Render UI Components*@
        model.render.ConfigPassword()
    })
</script>
